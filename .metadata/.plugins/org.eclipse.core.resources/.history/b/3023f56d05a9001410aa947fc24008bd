#include <iostream>
#include <unistd.h>
#include <vector>
#include <cstring>
#include <string>
#include <sys/wait.h>
#include <string>
#include <chrono>
#include "terminal.h"


int main(int argc, char **argv) {
	while(true){
		std::cout << "RoninShell->>> ";
		std::string line = "stuff";
		std::getline(std::cin,line);
		std::vector<std::string> data = parse(line);
		static std::vector<std::string> history;
		static std::chrono::microseconds time;

		switch(switchVal(data[0])){
		//Quit
		case(0):
		{
			exit(0);
			break;
		};
		//History
		case(1):
		{
			for(int i = 0; i < history.size(); i++ )
				std::cout << 0 - (i-history.size()) << ": " << history[i] << std::endl;
			break;
		};
		//History exec
		case(2):
		{
			std::cout << history.size() << std::endl;
			if(std::stoi(data[1]) <= history.size() && std::stoi(data[1]) > 0)
				std::cout << history[0 - (std::stoi(data[1])-history.size())] << std::endl;
			else
				std::cout << "History Query is Out of Bounds" << std::endl;
			break;
		}
		//PTime
		case(3):
		{
			int secs, millis, micros;
			secs = time.count()/1000000;
			millis = time.count()/1000 - secs*1000;
			micros = time.count() - millis*1000 - secs*1000000;
			std::cout << "Total Child Processes Time Taken: " << secs << " Seconds, " << millis << " Milliseconds, and " << micros << " Microseconds" << std::endl;

			break;
		};
		//Regular Command
		default:
		{

	};
		}
	}
}
